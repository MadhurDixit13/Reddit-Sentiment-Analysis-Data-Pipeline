name: CI/CD for Airflow & Streamlit

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Airflow Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/airflow:latest

      - name: Build and push Streamlit Dashboard image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./StreamlitDockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/streamlit-dashboard:latest

  deploy-render:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Render CLI
        run: |
          curl -L https://github.com/render-oss/cli/releases/download/v1.1.0/cli_1.1.0_linux_amd64.zip -o render.zip
          unzip -o render.zip
          sudo mv cli_v1.1.0 /usr/local/bin/render
          render --version  # âœ… Verify installation

      - name: Retrieve Render Service ID Dynamically
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          SERVICE_NAME="Reddit-Sentiment-Analysis-Data-Pipeline"
          SERVICE_ID=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
                      -H "Accept: application/json" \
                      https://api.render.com/v1/services | jq -r '.[] | select(.name=="'"$SERVICE_NAME"'") | .id')
          echo "RENDER_SERVICE_ID=$SERVICE_ID" >> $GITHUB_ENV  # Store for later steps
          echo "Found Service ID: $SERVICE_ID"

      - name: Deploy Reddit-Sentiment-Analysis-Data-Pipeline to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          CI: true
        run: render deploys create $RENDER_SERVICE_ID --output json --confirm

  # deploy-ec2:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Setup SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

  #     - name: Sync Project Files to EC2
  #       run: |
  #         rsync -avz --exclude '.git' --exclude 'node_modules' -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/ec2-user/Reddit-Sentiment-Analysis-Data-Pipeline/
      
  #     - name: Deploy on EC2 Using Docker Compose
  #       run: |
  #         ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
  #           cd /home/ec2-user/Reddit-Sentiment-Analysis-Data-Pipeline/
  #           docker-compose down
  #           docker-compose up -d
  #           docker system prune -f
  #         EOF
